{"version":3,"sources":["components/SearchBar.js","components/SongsList.js","images/image5.jpg","components/SearchList.js","components/ShuffleList.js","components/PlayList.js","constants/SongsListConstant.js","components/AddPlayList.js","actions/SongsListActions.js","App.js","reportWebVitals.js","store.js","reducers/SongsListReducer.js","index.js"],"names":["SearchBar","props","style","width","background","border","padding","value","input","placeholder","onChange","e","update","target","SongsList","songList","map","data","color","id","title","SearchList","useState","setInput","songsListDefault","setSongsListDefault","songsList","setSongsList","fetchData","a","fetch","then","response","json","useEffect","src","Images","className","to","display","marginLeft","type","filtered","filter","song","toLowerCase","includes","ShuffleList","shufflePosts","setShufflePosts","Image","array","i","length","j","Math","floor","random","temp","shuffleArray","d","fontSize","PlayList","data1","list","SONGS_LIST_REQUEST","SONGS_LIST_SUCCESS","SONGS_LIST_FAIL","AddPlayList","songs","useSelector","state","dispatch","useDispatch","axios","get","payload","message","App","path","component","AddPlaylist","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","loading","error","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50c7aaae.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBar = (props) => {\r\n  const BarStyling = {width:\"20rem\",background:\"#F2F1F9\", border:\"none\", padding:\"0.5rem\"};\r\n  return (\r\n    <input \r\n     style={BarStyling}\r\n     key=\"random1\"\r\n     value={props.input}\r\n     placeholder={\"search song\"}\r\n     onChange={(e) => props.update(e.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\n\r\nconst SongsList = ({songList=[]}) => {\r\n  return (\r\n    <>\r\n    { songList.map((data) => {\r\n        if (data) {\r\n          return (\r\n            <div key={data.id}>\r\n                <h1 style={{ color: 'blue' }}>{`${data.id}.${data.title}`}</h1>\r\n\t    </div>\t\r\n    \t   )\t\r\n    \t }\r\n    \t return null\r\n    }) }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SongsList","export default __webpack_public_path__ + \"static/media/image5.9977a9ee.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport SongList from './SongsList';\r\nimport {Link} from 'react-router-dom';\r\nimport Images from '../images/image5.jpg'\r\n\r\nconst SearchList = () => {\r\n  const [input, setInput] = useState('');\r\n  const [songsListDefault, setSongsListDefault] = useState();\r\n  const [songsList, setSongsList] = useState();\r\n\r\n  const fetchData = async () => {\r\n    return await fetch('https://jsonplaceholder.typicode.com/photos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n         setSongsList(data) \r\n         setSongsListDefault(data)\r\n       });}\r\n\r\n  const updateInput = (input) => {\r\n     const filtered = songsListDefault.filter(song => {\r\n     return song.title.toLowerCase().includes(input.toLowerCase()) \r\n    })\r\n     setInput(input);\r\n     setSongsList(filtered);\r\n  }\r\n\r\n  useEffect( () => {fetchData()},[]);\r\n\t\r\n  return (\r\n    <>\r\n     <img src={Images} className=\"bg\" />\r\n      <h1 style={{ color: 'red' }}>Songs List</h1>\r\n      <Link to=\"/playlist\" style={{ display: \"flex\" }}>\r\n     <button style={{ marginLeft: \"auto\" ,  color: 'red'}} type=\"button\">\r\n          PLAY LIST\r\n     </button>\r\n </Link>\r\n      <SearchBar \r\n       input={input} \r\n       update={updateInput}\r\n      />\r\n\r\n      <SongList songList={songsList}/>\r\n    </>\r\n   );\r\n}\r\n\r\nexport default SearchList","import React, { useState } from 'react';\r\nimport Image from '../images/image5.jpg';\r\nconst ShuffleList=(props)=>{\r\n const [shufflePosts,setShufflePosts]=useState([]);\r\n    function shuffleArray(array) {\r\n            let i = array.length - 1;\r\n            for (; i > 0; i--) {\r\n              const j = Math.floor(Math.random() * (i + 1));\r\n              const temp = array[i];\r\n              array[i] = array[j];\r\n              array[j] = temp;\r\n            }\r\n            setShufflePosts(array);\r\n            return array;\r\n          }\r\n  return (\r\n      <div>\r\n          \r\n          <img src={Image} className=\"bg\" />\r\n          {()=>shuffleArray(props.data)}\r\n          { shufflePosts.map((d) => {\r\n        if (d) {\r\n          return (\r\n            <div key={d.id}>\r\n                 <table>\r\n          <tr>\r\n         <th style={{ color: 'blue',fontSize: \"40px\" }}>{`${d.id}.${d.title}`} </th>\r\n        </tr>\r\n        </table>\r\n\t    </div>\t\r\n    \t   )\t\r\n    \t }\r\n    \t return null\r\n    }) }\r\n      </div>\r\n  )\r\n}\r\nexport default ShuffleList;\r\n\r\n\r\n// // function shuffleArray(array) {\r\n// //     let i = array.length - 1;\r\n// //     for (; i > 0; i--) {\r\n// //       const j = Math.floor(Math.random() * (i + 1));\r\n// //       const temp = array[i];\r\n// //       array[i] = array[j];\r\n// //       array[j] = temp;\r\n// //     }\r\n// //     return array;\r\n// //   }\r\n  \r\n// //   function RecommendedPosts({ posts }) {\r\n// //     const shuffledPosts = shuffleArray(posts);\r\n// //     return (\r\n// //       <ul>\r\n// //         {shuffledPosts.map((post) => {\r\n// //           return (\r\n// //             <li key={post.id}>\r\n// //               <p>{post.title}</p>\r\n// //               <p>{post.text}</p>\r\n// //               <p>{post.category}</p>\r\n// //               <Link to={`/blog/post-1/:${post.id}`}>Weiter lesen</Link>\r\n// //             </li>\r\n// //           );\r\n// //         })}\r\n// //       </ul>\r\n// //     );\r\n// //   }\r\n// //   RecommendedPosts.propTypes = {\r\n// //     posts: React.PropTypes.array,\r\n// //   };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Image from '../images/image5.jpg';\r\nimport ShuffleList from './ShuffleList';\r\n\r\nconst PlayList=(props)=>{\r\n    const [data1,setData]=useState([{\r\n        id: 1,\r\n        title:\"accusamus beatae ad facilis cum similique qui sunt\"\r\n    },\r\n{\r\n    id:2,\r\n    title: \"reprehenderit est deserunt velit ipsam\",\r\n},\r\n{\r\n    id:3,\r\n    title: \"officia porro iure quia iusto qui ipsa ut modi\"\r\n},\r\n{\r\n    id:4,\r\n    title:\"culpa odio esse rerum omnis laboriosam voluptate repudiandae\"\r\n}]);\r\nconst [data2,setData2]=useState([{\r\n    id:1,\r\ntitle:\"culpa odio esse rerum omnis laboriosam voluptate repudiandae\"\r\n},\r\n{\r\nid:2,\r\ntitle:\"natus nisi omnis corporis facere molestiae rerum in\"\r\n},\r\n{\r\nid:3,\r\ntitle:\"accusamus ea aliquid et amet sequi nemo\"\r\n},\r\n{\r\nid:4,\r\ntitle:\"officia delectus consequatur vero aut veniam explicabo molestias\"\r\n}]);\r\n\r\nfunction shuffleArray(array) {\r\n    let i = array.length - 1;\r\n    for (; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    setData(array);\r\n  }\r\n\r\n\r\n\r\n// const updateInput = () => {\r\n//     const filtered = data.map(song => {\r\n//     return song.title\r\n//    });\r\n//    const randomIndex = Math.floor(Math.random() * filtered.length);\r\n\r\n//     // get random item\r\n//     const item = filtered[randomIndex];\r\n\r\n//     setData()\r\n//  }\r\n   return (\r\n       <div>\r\n           <img src={Image} className=\"bg\" />\r\n           \r\n<Link to=\"/Musical_App\" style={{ display: \"flex\" }}>\r\n     <button style={{ marginLeft: \"auto\" }} type=\"button\">\r\n          All songs\r\n     </button>\r\n </Link>\r\n <div className=\"container\">\r\n  <div className=\"vertical-center\">\r\n  { data1.map((d) => {\r\n        if (d) {\r\n          return (\r\n            <div key={d.id}>\r\n                 <table>\r\n          <tr>\r\n         <th style={{ color: 'blue',fontSize: \"40px\" }}>{`${d.id}.${d.title}`} </th>\r\n        </tr>\r\n        </table>\r\n\t    </div>\t\r\n    \t   )\t\r\n    \t }\r\n    \t return null\r\n    }) }\r\n  \r\n  <Link to=\"/addplaylist\">\r\n     <button type=\"button\">\r\n          ADD PLAYLIST\r\n     </button>\r\n </Link>\r\n <Link to=\"/shufflelist\">\r\n     <button type=\"button\">\r\n          SHUFFLE\r\n     </button>\r\n </Link>\r\n  </div>\r\n</div>\r\n<div>\r\n</div>\r\n<ShuffleList list={data1} />\r\n       </div>\r\n   );\r\n}\r\nexport default PlayList;","//redux constants\r\nexport const SONGS_LIST_REQUEST='SONGS_LIST_REQUEST';\r\nexport const SONGS_LIST_SUCCESS='SONGS_LIST_SUCCESS';\r\nexport const SONGS_LIST_FAIL='SONGS_LIST_FAIL';\r\n","import React,{ useEffect ,useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {songsListProducts} from '../actions/SongsListActions';\r\nimport Image from '../images/image5.jpg';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst AddPlayList=()=>{\r\n     const songsList = useSelector((state) => state.songsList);\r\n    const { songs } = songsList;\r\n    //dispatching the action\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n     dispatch(songsListProducts());\r\n     return () => {\r\n       //\r\n     };\r\n   }, []);\r\n  \r\n  //  const storeinLocal=(data)=>{\r\n  //      const lists=[];\r\n  //       localStorage.setItem('myvalue',data);\r\n  //       lists.push(data.title);\r\n  //      // setList(lists)\r\n  //       console.log(setList);\r\n         \r\n  //   }\r\n      return (\r\n          <div>\r\n               <img src={Image} className=\"bg\" />\r\n               <div className=\"container\">SONGSLIST</div>\r\n  {songs.map(song=><div key={song.id}>\r\n      <div>\r\n      <h1 style={{ color: 'red' }}>{song.title}</h1>\r\n      <Link to=\"/playlist\">\r\n     <button type=\"button\">\r\n          ADD SONG\r\n     </button>\r\n </Link>\r\n              \r\n          </div>\r\n            \r\n          </div>)}\r\n          </div>\r\n      )     \r\n         \r\n}\r\nexport default AddPlayList;","//related to redux\r\n//redux actions\r\nimport axios from 'axios';\r\nimport {SONGS_LIST_FAIL,SONGS_LIST_SUCCESS,SONGS_LIST_REQUEST} from '../constants/SongsListConstant';\r\nconst songsListProducts = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: SONGS_LIST_REQUEST });\r\n      const { data } = await axios.get(\"https://jsonplaceholder.typicode.com/photos\");\r\n      dispatch({ type: SONGS_LIST_SUCCESS, payload: data });\r\n    }\r\n    catch (error) {\r\n      dispatch({ type: SONGS_LIST_FAIL, payload: error.message });\r\n    }\r\n  }\r\n  export {songsListProducts};","//import HomeScreen from './components/HomeComponent/HomeScreen';\nimport SearchList from './components/SearchList';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport PlayList from './components/PlayList';\nimport AddPlaylist from './components/AddPlayList';\nimport ShuffleList from './components/ShuffleList';\n\nfunction App() {\n  //routing \n  return (\n    <BrowserRouter>\n    <Route path=\"/AddPlaylist\" component={AddPlaylist}/>\n    <Route path=\"/playlist\" component={PlayList}/>\n    <Route path=\"/shufflelist\" component={ShuffleList}/>\n    <Route path=\"/Musical_App\" exact={true} component={SearchList}/>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport {songsListReducer} from './reducers/SongsListReducer';\r\nimport thunk from 'redux-thunk';\r\nconst initialState = {  };\r\nconst reducer = combineReducers({\r\n  songsList: songsListReducer\r\n})\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\nexport default store;","//actions reducer\r\nimport {SONGS_LIST_SUCCESS,SONGS_LIST_REQUEST,SONGS_LIST_FAIL} from '../constants/SongsListConstant'\r\nconst songsListReducer=(state={songs:[]},action)=>\r\n{\r\n    switch (action.type)\r\n    {\r\n        case   SONGS_LIST_REQUEST:\r\n            return {loading:true,songs:[]};\r\n        case SONGS_LIST_SUCCESS:\r\n            return {loading:false,songs:action.payload};\r\n        case SONGS_LIST_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state;    \r\n\r\n\r\n    }\r\n}\r\n\r\nexport  {songsListReducer};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n</Provider>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}